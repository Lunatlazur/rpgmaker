declare module MV
{
    export class Game_Interpreter
    {
        initialize(depth: number): void;
        checkOverflow(): void;
        clear(): void;
        setup(list: any, eventId: number): void;
        eventId(): number;
        isOnCurrentMap(): boolean;
        setupReservedCommonEvent(): boolean;
        isRunning(): boolean;
        update(): void;
        updateChild(): boolean;
        updateWait(): boolean;
        updateWaitCount(): boolean;
        updateWaitMode(): boolean;
        setWaitMode(waitMode: string): void;
        wait(duration: number): void;
        fadeSpeed(): number;
        executeCommand(): boolean;
        checkFreeze(): boolean;
        terminate(): void;
        skipBranch(): void;
        currentCommand(): any;
        nextEventCode(): number;
        iterateActorId(param: any, callback: Function): void;
        iterateActorIdEx(param1: any, param2: any, callback: Function): void;
        iterateActorIndex(param: any, callback: Function): void;
        iterateEnemyIndex(param: any, callback: Function): void;
        iterateBattler(param1: any, param2: any, callback: Function): void;
        character(param: any): any; // TODO
        operateValue(operation: number, operandType: number, operand: number): number;
        changeHp(target: any, value: number, allowDeath: boolean): void; // TODO
        command101(): boolean;
        command102(): boolean;
        setupChoices(params: any): void;
        command402(): boolean;
        command403(): boolean;
        command103(): boolean;
        setupNumInput(params: any): void;
        command104(): boolean;
        setupItemChoice(params: any): void;
        command105(): boolean;
        command108(): boolean;
        command111(): boolean;
        command411(): boolean;
        command112(): boolean;
        command413(): boolean;
        command113(): boolean;
        command115(): boolean;
        command117(): boolean;
        setupChild(list: any, eventId: number): void;
        command118(): boolean;
        command119(): boolean;
        jumpTo(index: number): void;
        command121(): boolean;
        command122(): boolean;
        gameDataOperand(type: number, param1: any, param2: any): number;
        operateVariable(variableId: number, operationType: number, value: number): void;
        command123(): boolean;
        command124(): boolean;
        command125(): boolean;
        command126(): boolean;
        command127(): boolean;
        command128(): boolean;
        command129(): boolean;
        command132(): boolean;
        command133(): boolean;
        command134(): boolean;
        command135(): boolean;
        command136(): boolean;
        command137(): boolean;
        command138(): boolean;
        command139(): boolean;
        command140(): boolean;
        command201(): boolean;
        command202(): boolean;
        command203(): boolean;
        command204(): boolean;
        command205(): boolean;
        command206(): boolean;
        command211(): boolean;
        command212(): boolean;
        command213(): boolean;
        command214(): boolean;
        command216(): boolean;
        command217(): boolean;
        command221(): boolean;
        command222(): boolean;
        command223(): boolean;
        command224(): boolean;
        command225(): boolean;
        command230(): boolean;
        command231(): boolean;
        command232(): boolean;
        command233(): boolean;
        command234(): boolean;
        command235(): boolean;
        command236(): boolean;
        command241(): boolean;
        command242(): boolean;
        command243(): boolean;
        command244(): boolean;
        command245(): boolean;
        command246(): boolean;
        command249(): boolean;
        command250(): boolean;
        command251(): boolean;
        command261(): boolean;
        videoFileExt(): string;
        command281(): boolean;
        command282(): boolean;
        command283(): boolean;
        command284(): boolean;
        command285(): boolean;
        command301(): boolean;
        command601(): boolean;
        command602(): boolean;
        command603(): boolean;
        command302(): boolean;
        command302(): boolean;
        command311(): boolean;
        command312(): boolean;
        command326(): boolean;
        command313(): boolean;
        command314(): boolean;
        command315(): boolean;
        command316(): boolean;
        command317(): boolean;
        command318(): boolean;
        command319(): boolean;
        command320(): boolean;
        command321(): boolean;
        command322(): boolean;
        command323(): boolean;
        command324(): boolean;
        command325(): boolean;
        command331(): boolean;
        command332(): boolean;
        command342(): boolean;
        command333(): boolean;
        command334(): boolean;
        command335(): boolean;
        command336(): boolean;
        command337(): boolean;
        command339(): boolean;
        command340(): boolean;
        command351(): boolean;
        command352(): boolean;
        command353(): boolean;
        command354(): boolean;
        command355(): boolean;
        command356(): boolean;
        pluginCommand(command: string, args: any): void;
    }
}